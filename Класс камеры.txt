from CAMS import getGigEDevices, BaseCam

getGigEDevices() - функция, возвращающая список камер в сети. Если камер нет, то список пуст.
так же она может вернуть одну конкретную камеру, если в качестве аргумента указать ее ключ
который строится как vendor:serial_number если такой камеры в сети нет, то возвращается None

dev = getGigEDevices()[0] - первая камера в сети

Cam = BaseCam(dev) - класс управления камерой, в качестве аргумента конструктор принимает камеру, возвращенную
функцией getGigEDevices(). Если IP камеры не соответствует сети, то он будет изменен и камера все равно
подключиться корректно

Для настройки камеры используются функции setNode(key, value) и setNodes(List)
Cam.setNode('ExposureTime', 1000)
Nodes = [
    ['ExposureTime', 1000]'
    ["TriggerMode", "Off"],
    ["PixelFormat", "BayerRG8"]]
Cam.setNodes(Nodes)

Так же можно получить значение параметра функцией getNode(key) или выполнить внутреннюю команду камеры cmdNode(cmd)
Стоит помнить, что разные камеры имеют разные ключи параметров и команд, например для камер basler выдержка устанавливается
ключем "ExposureTimeAbs"

запуск и остановка потока выполняются командами startGrabbing и stopGrabbing
startGrabbing в качестве аргумента может принимать функцию обработки кадра, если она не указано
то кадры кидатся во внутренний буфер максимальный размер которого задается параметром maxBufferSize, по умолчанию 20
извлечь кадр можно командой getFame(), которая возвращает словарь
        FrameDict['Type'] = 'Img'
        FrameDict['CamName'] = имя камеры, заданное пользователем как setNode('DeviceUserID','XXX'), или есле не задано, то ключ
        FrameDict['Img'] = cv2 изображение
        FrameDict['ID'] = номер кадра
        FrameDict['LastLost'] = количество потерянных кадров непосредственно перед данным
        FrameDict['FPS'] = скорость получения кадров
        FrameDict['AllLost'] = общие потери кадров с момента запуска
        FrameDict['TimeStamp'] = время получения кдра (float)
        FrameDict['dt'] = время до предыдущего кадра в милисекундах
        FrameDict['Key'] = ключ
этот же словарь поступает и в функцию обработки, если она задана, при этом внутрений буфер не заполняется и getFrame вернет None
так же функцию обработки можно установить командой setCallFunc(callFunc)

текущее состояние камеры можно узнать функцией getStatus(), котрая возвращает словарь

        status['Type'] = 'Status'
        status['Key'] = ключ
        status['CamName'] = имя камеры
        status['frameID'] = номер последнего кадра
        status['FPS'] = скорость получения кадров
        status['Lost'] = общие потери кадров с момента запуска
        status['Grabing'] = True если поток запущен
        status['Connect'] = True если камера подключена
        status['SocketMode'] = True если драйвер не прогрузился и камера работает в режиме сокета
        status['PreImg'] = последний полученый кадр в формате jpeg bytes, сжатый в соответствии с полем scale, по умолчанию 0.1
        status['Info'] = текстовая строка с информацией о камере

так же полезно:
getLastImg() - cv2 последний полученый кадр, если еще не получен - черный прямоугольник 320х200
setMax() - устанавливает для камеры максимально допустимое разрешение, с линейными камерами применять не стоит
